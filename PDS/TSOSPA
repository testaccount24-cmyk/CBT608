         TITLE 'TSOSPA - TSO DASD SPACE MONITOR'
*
***********************************************************************
*                                                                     *
*    *** TSOSPA ***    (DYNAMIC DEVICE SUPPORT)                      *
*                      (4 CHAR UCB SUPPORT)                          *
*                                                                     *
*   ROSCOE MONITOR ROUTINE CONVERTED TO RUN UNDER A TSO CLIST WHICH   *
*   DISPLAYS DISK SPACE ON ALL OR SELECTED VOLUMES.                   *
*                                                                     *
*   02/21/06 (RGG) - CORRECT NO. CYLS IN A VOLUME (ALT CYLS)          *
*   08/18/03 (RGG) - ENLARGE % USED CALC FIELDS DUE TO OVERFLOW       *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 1
TSOSPA   CSECT
         USING *,R15
         B     AROUND
         DC    AL1(23)
         DC    CL9'&SYSDATE'
         DC    CL5'&SYSTIME'
AROUND   DS    0H
         STM   R14,R12,12(R13)
         ST    R13,SAVEAREA+4
         LA    R7,SAVEAREA
         ST    R7,8(R13)
         LA    R13,SAVEAREA
         DROP  R15
         USING SAVEAREA,R13
         B     BEGIN
SAVEAREA DC    18F'0'
BEGIN    DS    0H
         EJECT
         L     R2,0(R1)            OS PARM ADDR
         LH    R1,0(R2)            PARM L'
         STH   R1,INPARMLN         SAVE IT
         LTR   R1,R1               ANYTHING ENTERED ?
         BC    13,NOPARM           NOPE..FLAG/EXIT
         LA    R1,2(R2)            R1=PARM ADDR
         ST    R1,PARMADDR         SAVE IT
         XC    PARMPTR,PARMPTR
         BAL   R11,GETPARM         PROCESS 1ST PARM
         CLI   PARMTYPE,C'='       KEYWORD= PARM?
         BE    KEYPARM
         CLI   PARMTYPE,C','       OMITTED PARMS
         BE    KEYPARM             ARE IGNORED
*
         CLC   PARMLEN,=H'6'       THE ONLY POSITIONAL PARM IS
         BH    BADVOL              EXPECTED TO BE A <GENERIC> VOLSER
         BAL   R11,PARMVOL         PROCESS VOLSER
         B     NEXTPARM
         EJECT
NEXTPARM DS    0H
         BAL   R11,GETPARM         GET NEXT PARM
         CLI   PARMTYPE,C'='       KEYWORD= PARM?
         BNE   BADPARM             ANYTHING ELSE IS BAD
KEYPARM  EQU   *
         CLI   PARMTYPE,C','       EXCEPT OMITTED PARMS
         BE    NEXTPARM            WHICH ARE IGNORED
*
         MVC   KEYWORD,PARMVAL     SAVE KEYWORD
         BAL   R11,GETPARM         GET OPERAND
*
         CLI   KEYWORD,C'U'        U<CB>=U<C<B>>?
         BNE   PNCHAN
         BAL   R11,PARMCHAN        PROCESS UCB
         B     NEXTPARM
*
PNCHAN   CLI   KEYWORD,C'D'        D<EVICE>=DEVTYPE?
         BNE   PNDEV
         BAL   R11,PARMDEV         PROCESS DEVICE
         B     NEXTPARM
*
PNDEV    CLI   KEYWORD,C'V'        VOLSER=?
         BNE   BADPARM
         BAL   R11,PARMVOL         PROCESS VOLSER
         B     NEXTPARM
         EJECT
*---------------------------------------------------------------------*
*        HANDLE VOLSER, WHICH MAY BE GENERIC                          *
*---------------------------------------------------------------------*
         DC    CL8'PARMVOL',F'0'
PARMVOL  ST    R11,*-4
         LA    R0,5
         LA    R1,VOLSERLN
         BAL   R11,GENERIC
         L     R11,PARMVOL-4
         BALR  R11,R11
         SPACE 2
*---------------------------------------------------------------------*
*        CHANNEL AND DEVICE PARMS                                     *
*---------------------------------------------------------------------*
         DC    CL8'PARMCHAN',F'0'
PARMCHAN ST    R11,*-4
         LA    R0,4                 ALLOW FOR 4-CHAR UCB
         LA    R1,UNITLN
         BAL   R11,GENERIC
         L     R11,PARMCHAN-4
         BALR  R11,R11
         SPACE 2
         DC    CL8'PARMDEV',F'0'
PARMDEV  ST    R11,*-4
         LA    R1,PARMVAL
         BAL   R11,DEVTOC           CONVERT DEVICE NAME TO BYTE (CHAR)
         MVC   DEVMASK,0(R1)
         L     R11,PARMDEV-4
         BALR  R11,R11
         EJECT
*---------------------------------------------------------------------*
*        GET NEXT PARM, IF ANY                                        *
*---------------------------------------------------------------------*
         DC    CL8'GETPARM',F'0'
GETPARM  ST    R11,*-4
         DS    0H
         MVC   PARMVAL(8),=CL8' '  PRETEND FIXED-LENGTH 8 BYTE PARM
         L     R15,PARMADDR        GET A(PARMAREA)
         ST    R15,APARMAD         SAVE IT IN LIST
         LA    R1,LIST             POINT TO IT
         CALL  ASMPARSE
         STC   R0,PARMTYPE         SAVE TYPE RETURNED
         B     *+4(R15)
         B     GETPXX              GOT ONE
         B     PARMERR             SHOULDN'T HAPPEN
         B     PARMEND             NO MORE
         B     PARMERR             SYNTAX ERROR IN PARM
GETPXX   EQU   *
         LH    R1,PARMLEN
         LTR   R1,R1
         BNP   PARMERR             NULL PARM
         BCTR  R1,0
         EX    R1,UPCASE
GETPXX1  EQU   *
         L     R11,GETPARM-4
         BALR  R11,R11
*
UPCASE   TR    PARMVAL(0),UPPER    MAKE UPPER CASE
         EJECT
*---------------------------------------------------------------------*
*        MAIN PROGRAM                                                 *
*---------------------------------------------------------------------*
PARMEND  DS    0H
NOSTRING EQU   *
         BAL   R11,SETUP
         BAL   R11,UCBSCAN
         CLI   HITS,TRUE
         BE    RET0
         B     DEVERR
*
RET8     EQU   *
         LA    R15,8
         B     EXIT
         SPACE
RET0     EQU   *
         LA    R2,WORK
         BAL   R11,PUT            BLANK LINE
* WRITE TOTAL VOLS FOUND
         MVC   WORK(18),=CL18' TOTAL VOLS FOUND '
         L     R1,VOLSFND
         CVD   R1,DOUB
         MVC   WORK+18(L'MASKCYL),MASKCYL
         ED    WORK+18(L'MASKCYL),DOUB
         LA    R2,WORK
         BAL   R11,PUT            WRITE LINE
* WRITE TOTAL CYLS AVAILABLE
         MVC   WORK(18),=CL18' TOTAL CYLS AVAIL '
         L     R1,CYLAVAIL        R1=TOTAL CYLS AVAIL FOR ALL DASD
         CVD   R1,DOUB
         MVC   WORK+18(L'MASKCYL),MASKCYL
         ED    WORK+18(L'MASKCYL),DOUB
         LA    R2,WORK
         BAL   R11,PUT            WRITE LINE
* WRITE TOTAL CYLS USED
         MVC   WORK(18),=CL18' TOTAL CYLS USED  '
         L     R1,CYLAVAIL
         L     R0,CYLFREE
         SR    R1,R0              CALC #CYLS USED
         ST    R1,CYLUSED
         CVD   R1,DOUB
         MVC   WORK+18(L'MASKCYL),MASKCYL
         ED    WORK+18(L'MASKCYL),DOUB
         LA    R2,WORK
         BAL   R11,PUT            WRITE LINE
* WRITE TOTAL CYLS FREE
         MVC   WORK(18),=CL18' TOTAL CYLS FREE  '
         L     R1,CYLFREE         R1=TOTAL CYLS FREE FOR ALL DASD
         CVD   R1,DOUB
         MVC   WORK+18(L'MASKCYL),MASKCYL
         ED    WORK+18(L'MASKCYL),DOUB
         LA    R2,WORK
         BAL   R11,PUT            WRITE LINE
* WRITE % FREE
         SR    R0,R0              CLEAR HI-ORDER DIVIDE REG
         L     R1,CYLFREE         R0-R1 HAS CYLS FREE
         M     R0,=F'1000'        ENLARGE TO ALLOW %.X DISPLAY
         L     R14,CYLAVAIL       R14 HAS CYLS AVAIL
         DR    R0,R14             R1 HAS QUOTIENT, IGNORE REMAINDER
         CVD   R1,DOUB1           DOUB1 HAS PACKED VERSION OF QUOT.
NOT0     EQU   *
         MVC   WORK(31),=CL31' (%)   CYLS FREE  '
         MVC   WORK+31(L'MASKPCT),MASKPCT
         ED    WORK+31(L'MASKPCT),DOUB1+5
         LA    R2,WORK
         BAL   R11,PUT            WRITE LINE
         XR    R0,R0
         SPACE
EXIT     EQU   *
         TM    PRT+48,X'10'       DCB OPEN ?
         BZ    NEVER              NO...
         CLOSE (PRT)              CLOSE IT
NEVER    EQU   *
         L     R13,SAVEAREA+4
         RETURN (14,12),RC=(15)
         TITLE 'ERROR ROUTINES'
***********************************************************************
*                    E R R O R   R O U T I N E S                      *
***********************************************************************
         SPACE
NOPARM   EQU   *
         MVC   WORK(L'ERR1),ERR1
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
PARMERR  EQU   *
         MVC   WORK(L'ERR2),ERR2
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
DEVERR   EQU   *
         MVC   WORK(L'ERR3),ERR3
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
BADVOL   EQU   *
         MVC   WORK(L'ERR4),ERR4
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
BADPARM  EQU   *
         MVC   WORK(L'ERR5),ERR5
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
CTODNF   EQU   *
         MVC   WORK(L'ERR6),ERR6
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
DTOCNF   EQU   *
         MVC   WORK(L'ERR7),ERR7
         LA    R2,WORK
         BAL   R11,PUT
         B     RET8
         SPACE
         TITLE 'SUBROUTINES'
         DC    CL8'GENERIC',F'0'
GENERIC  ST    R11,*-4
*---------------------------------------------------------------------*
*       GENERIC OPERAND.  ENTER  WITH R0 = MAX LENGTH, R1 -> DEST     *
*---------------------------------------------------------------------*
         LA    R3,PARMVAL
         AH    R3,PARMLEN              POINT TO LAST CHAR IN ARG
         BCTR  R3,0                    -----
         CLI   0(R3),C'+'              GENERIC NAME?
         BNE   STRLPN1                 ALL THE SAME TO ME
         BCTR  R3,0                    DISCOUNT '+'
STRLPN1  LA    R0,PARMVAL
         SR    R3,R0
         BM    GENRNULL                NULL OPERAND, IGNORE
         EX    R3,GENRMOVE
         LA    R3,1(R3)
         STH   R3,0(R1)
GENRNULL EQU   *
         L     R11,GENERIC-4
         BALR  R11,R11
*
GENRMOVE MVC   2(0,R1),PARMVAL
         EJECT
*---------------------------------------------------------------------*
*      WRITE TO TSO SCREEN
*---------------------------------------------------------------------*
         SPACE
         DC    CL8'PUT',F'0'
PUT      ST    R11,*-4
         TM    PRT+48,X'10'       DCB OPEN ?
         BO    OPENED             YUP
         OPEN  (PRT,(OUTPUT))
OPENED   EQU   *
         PUT   PRT,(2)            WRITE RECORD
         MVC   WORK(80),=CL80' '  CLEAR WORK AREA
         L     R11,PUT-4
         BALR  R11,R11
         EJECT
*---------------------------------------------------------------------*
*        DETERMINE WHETHER OUTPUT IS BOUND                            *
*---------------------------------------------------------------------*
         DC    CL8'SETUP',F'0'
SETUP    ST    R11,*-4
         LA    R2,MSGHELP
         BAL   R11,PUT
         LA    R2,MSGHELP2
         BAL   R11,PUT
         L     R11,SETUP-4
         BALR  R11,R11
         EJECT
*---------------------------------------------------------------------*
*        PREPARE FOR UCB SCAN                                         *
*---------------------------------------------------------------------*
         DC    CL8'UCBSCAN',F'0'
UCBSCAN  ST    R11,*-4
UCBLOOP  DS    0H
         PUSH PRINT
         PRINT GEN
         UCBSCAN COPY,                                                 X
               WORKAREA=UCBWORK,                                       X
               UCBAREA=UCBAREA,                                        X
               DEVN=0,                                                 X
               DYNAMIC=YES,                                            X
               RANGE=ALL,                                              X
               DEVCLASS=DASD
         POP   PRINT
         LTR   R15,R15                 END OF DASD DEVICES ?
         BNZ   UCBEND                  YES...EXIT RTN
*
*---------------------------------------------------------------------*
*        FILTER OUT UNWANTED DEVICES/VOLUMES                          *
*---------------------------------------------------------------------*
*
         LA    R7,UCBAREA
         USING UCB,R7
         TM    UCBSTAT,UCBONLI          IS DEVICE ONLINE
         BZ    UCBLOOP
         LH    R1,VOLSERLN
         LTR   R1,R1                   LEN=-1?
         BNP   FFUNIT                  NO GENERIC OPTION
         CLI   VOLSER0,C'*'            REQUESTING ALL DASD ?
         BE    FFUNIT                  Y
         BCTR  R1,0                BIAS
         EX    R1,COMPSTR              COMPARE
         BNE   UCBLOOP                 NO MATCH, IGNORE
*
FFUNIT   EQU   *
* BEGIN - 4 CHAR UCB
         UNPK  UCBNAME4(5),UCBCHAN(3)  CUUU FROM UCB
         MVZ   UCBNAME4(4),=4X'00'     CLEAR ZONES FOR TR
         TR    UCBNAME4(4),TRTAB       MAKE CHAR PRINTABLE
         MVC   MESSAGE(4),UCBNAME4     PUT UNIT IN MSG
* END - 4 CHAR UCB
         LH    R1,UNITLN               FILTER FOR UNIT
         LTR   R1,R1                   LEN=-1?
         BNP   DEVLOOK
         BCTR  R1,0                    BIAS
         EX    R1,COMPUNIT             COMPARE
         BNE   UCBLOOP                 NO MATCH, IGNORE
*
DEVLOOK  CLI   DEVMASK,0               DEVICE=PARM FILTER?
         BE    FREELOOK                NO
         CLC   UCBUNTYP,DEVMASK        YES, FILTER IT
         BNE   UCBLOOP
*
FREELOOK EQU   *
         BAL   R11,FORMAT
         B     UCBLOOP                 GO FOR NEXT
*
UCBEND   DS    0H
         L     R11,UCBSCAN-4
         BALR  R11,R11
*
COMPSTR  CLC   VOLSER0(0),UCBVOLI      GENERIC COMPARE
COMPUNIT CLC   UNIT0(0),UCBNAME4       GENERIC COMPARE
         TITLE 'LOOKUP VOLUME CAPACITIES'
***********************************************************************
*        LOOKUP AND DISPLAY VOLUME FREE SPACE                         *
***********************************************************************
         SPACE 1
         DROP  R7
         DC    CL8'FORMAT',F'0'
FORMAT   ST    R11,*-4
         L     R1,VOLSFND              ADD 1 TO #VOLS CTR
         LA    R1,1(R1)
         ST    R1,VOLSFND
         USING UCB,R5              ... STILL ...
         MVI   HITS,TRUE
         LA    R5,UCBAREA
         LSPACE UCB=(R5),                                              X
               SMF=NONE,                                               X
               DATA=SPACEWRK,                                          X
               F4DSCB=F4DSCB,                                          X
               MF=I
         LTR   R15,R15                  NORMAL ?
         BNZ   FORMXX                   NO CONTINUE
         MVC   MSGVOLSE,UCBVOLI         PUT VOLSER IN MSG
MOUNTS   DS    0H                       GET PRIMARY UCB AGAIN
         ICM   R15,15,SPACEWRK+8        * FREE CYLS *
         L     R0,CYLFREE                 > INCREMENT
         AR    R0,R15                     > TOTAL
         ST    R0,CYLFREE                 > FREE CYLS
         CVD   R15,DOUB
         MVC   MSGFREEC(L'MASK),MASK
         ED    MSGFREEC(L'MASK),DOUB+5
*
         ICM   R15,15,SPACEWRK+12       * FREE TRKS *
         CVD   R15,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         OI    WORK5+4,240
         MVC   MSGFREET(4),WORK5+1
*
         ICM   R15,15,SPACEWRK+4        * FREE EXTENTS *
         CVD   R15,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         OI    WORK5+4,240
         MVC   MSGFREEX(4),WORK5+1
*
         ICM   R15,15,SPACEWRK+16       * MAX FREE - CYL *
         CVD   R15,DOUB
         MVC   MSGMAXC(L'MASK),MASK
         ED    MSGMAXC(L'MASK),DOUB+5
*
         ICM   R15,15,SPACEWRK+20       * MAX FREE - TRK *
         CVD   R15,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         OI    WORK5+4,240
         MVC   MSGMAXT(4),WORK5+1
*
         MVC   MSGMOUNT,=CL12'      /     '
         TM    UCBSTAT,UCBRESV          IS IT RESERVED?
         BNO   *+10
         MVC   MSGMOUNT+7(5),=CL5'RSERV'
         TM    UCBSTAT,UCBPRES          IS IT RESIDENT
         BNO   *+10
         MVC   MSGMOUNT+7(5),=CL5'RSDNT'
         TM    UCBSTAB,UCBBPRV          IS IT PRIVATE
         BNO   TRYPUB
         MVC   MSGMOUNT(6),=CL6'  PRIV'
         B     ALLOCATE
TRYPUB   DS    0H
         TM    UCBSTAB,UCBBPUB          IS IT PUBLIC
         BNO   TRYSTOR
         MVC   MSGMOUNT(6),=CL6'PUBLIC'
         B     ALLOCATE
TRYSTOR  DS    0H
         TM    UCBSTAB,UCBBSTR          IS IT STORAGE
         BNO   ALLOCATE
         MVC   MSGMOUNT(6),=CL6'  STRG'
         EJECT
ALLOCATE DS    0H
         SPACE
         TM    UCBSTAT,UCBALOC          IS UNIT ALLOCATED
         MVI   MSGALLOC,C'O'            DEFAULT TO OPEN
         BNO   SMS
         MVI   MSGALLOC,C'A'            ASSUME JUST ALLOCATED
         TM    UCBSTAT,UCBSYSR          TEST FOR SYSTEM UNIT
         BNO   SMS
         MVI   MSGALLOC,C'S'            MUST BE SYSTEM
SMS      EQU   *
         TM    DS4SMSFG,X'C0'           SMS CONTROL ?
         BZ    NOSMS                    NOPE
         MVC   MSGSMS(3),=C'YES'
         B     FRAGINDX
NOSMS    EQU   *
         MVC   MSGSMS(3),=C'NO '
*
FRAGINDX EQU   *
         ICM   R15,15,SPACEWRK+32       * FRAGMENTATION INDEX *
         CVD   R15,DOUB
         UNPK  WORK5(5),DOUB+5(3)
         OI    WORK5+4,240
         MVC   MSGFRAG(4),WORK5+1
*
WRITEMSG EQU   *
         SR    R15,R15              CLEAR R15 FOR WORK
         ICM   R15,3,DS4DEVSZ       R15=TOTAL CYLINDERS FOR THIS UCB
         TM    DS4DEVFG,DS4DEVAV    #ALT CYLS VALID ?
         BZ    NODEDUCT             NO..SKIP USING ALT CYLS
         SR    R14,R14              CLEAR R14
         IC    R14,DS4DEVAC         R14 => #ALT CYLS
         SR    R15,R14              DEDUCT ALT FROM AVAIL
NODEDUCT EQU   *
         L     R0,CYLAVAIL            > INCREMENT
         AR    R0,R15                 > TOTAL CYLS IN
         ST    R0,CYLAVAIL            > SPA REQUEST
         CVD   R15,DOUB
         MVC   MSGUTYP(L'MASKMAX),MASKMAX
         ED    MSGUTYP(L'MASKMAX),DOUB+5  MAX # CYLS
         MVC   WORK(MSGLEN),MESSAGE
         LA    R2,WORK
         BAL   R11,PUT
         SPACE 3
FORMXX   EQU   *
         L     R11,FORMAT-4
         BALR  R11,R11
         DROP  R5
         EJECT
*---------------------------------------------------------------------*
*        LOOKUP CHARACTER DEVICE ID.                                  *
*        ON ENTRY, R1-> UNIT TYPE BYTE (CHAR)                         *
*        ON EXIT,  R1-> UNIT NAME                                     *
*---------------------------------------------------------------------*
         SPACE 1
         EJECT
*---------------------------------------------------------------------*
*        TRANSLATE HUMAN DEVICE ID TO UCB DEVICE ID                   *
*        ON ENTRY  R1-> UNIT NAME                                     *
*        ON EXIT   R1-> UNIT TYPE BYTE (CHAR)                         *
*---------------------------------------------------------------------*
         SPACE 1
         DC    CL8'DEVTOC',F'0'
DEVTOC   ST    R11,*-4
         LA    R2,DEVICES
DTOCLP   CLI   0(R2),X'FF'         END?
         BE    DTOCNF              NOT FOUND, ERROR
         CLC   1(8,R2),0(R1)       TRY NEXT
         BE    DTOCFF
         LA    R2,9(R2)
         B     DTOCLP
DTOCFF   LR    R1,R2               POINT TO UCB TYPE
         L     R11,DEVTOC-4
         BALR  R11,R11
         EJECT
*
MSGHELP  DC    CL80' UCB  VOLSER   +--- FREE ---+   MAX CONTIG    MOUNTX
                   ALLOC/ AVAIL  SMS  FRAG'
MSGHELP2 DC    CL80'               CYLS-TRKS-EXTS   CYLS-TRKS     ATTRIX
               BS   OPN   CYLS        INDEX'
         SPACE 2
*---------------------------------------------------------------------*
*        DEVICE TYPE LOOKUP TABLE                                     *
*---------------------------------------------------------------------*
         SPACE 1
DEVICES  DS    0F
         DC    XL1'0E',CL8'3380'
         DC    XL1'0F',CL8'3390'
         DC    XL1'FF',XL8'FFFFFFFFFFFFFFFF'      END
         SPACE 2
*---------------------------------------------------------------------*
*        LOWER-TO-UPPER CASE TRANSLATION TABLE                        *
*---------------------------------------------------------------------*
         SPACE 1
UPPER    DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         TITLE 'TSOSPACE -- WORKING STORAGE'
         DC    C'PARMS'
*===== PARSING AREAS =========
PARMADDR DC    A(0)         ADDRESS OF STRING FROM TSO    (TEXT PART)
PARMPTR  DC    H'0'         OFFSET INTO STRING WHERE NEXT PARM IS FOUND
INPARMLN DC    H'0'         LENGTH OF STRING FROM TSO
KEYWORD  DC    CL8' '                      KEYWORD PARM NAME
*
PARM     DS    0CL82
PARMLEN  DC    H'0'
PARMVAL  DC    CL80' '             MAXIMUM POSSIBLE PARM AND THEN SOME
PARMTYPE DC    C' '
*==== END OF PARSING AREAS ====
         SPACE 2
MSGPARMS DC    F'0'                    ADDR OF MESSAGE LINE
MSGPREF  DC    XL1'0'                  MESSAGE LENGTH
*==== DATA LINE WRITTEN OUT ====
MESSAGE  DS    0C                    .
MSGUCB   DC    CL4' ',CL2' '         . DEVICE ADDRESS (CUU)
MSGVOLSE DC    CL6' ',CL1' '         . VOLSER
MSGFREEC DC    CL6' ',C','           . SPACE FREE - CYL
MSGFREET DC    CL4' ',C','           . SPACE FREE - TRK
MSGFREEX DC    CL4' ',CL1' '         . SPACE FREE - EXTENTS
MSGMAXC  DC    CL6' ',C','           . MAX FREE - CYL
MSGMAXT  DC    CL4' ',CL2' '         . MAX FREE - TRK
MSGMOUNT DC    CL12' ',CL2' '        . MOUNT ATTRIBUTES
MSGALLOC DC    CL1' ',CL2' '         . ALLOC./OPEN
MSGUTYP  DC    CL7' ',CL2' '         . DASD UNIT TYPE
MSGSMS   DC    CL3' ',CL2' '         . SMS STATUS
MSGFRAG  DC    CL4' '                . FRAGMENTATION INDEX
MSGLEN   EQU   *-MESSAGE
*==== END OF LINE WRITTEN OUT ===
*
SPACEWRK DC    CL36' '                LSPACE RETURNS SPACE INFO HERE
*
UCBWORK  DC    XL100'00'           UCB SCAN WORK
UCBAREA  DS    CL48                UCB
*
MSGOUT   DC    H'0'                OUTPUT TO ONE OF THE FOLLOWING...
APENDAGE DC    X'00'
         SPACE 2
DEVMASK  DC    AL1(0)              0 UNLESS DEV= PARM, THEN UCB TYPE
HITS     DC    AL1(0)              0 UNTIL 1ST VOLUME PASSES FILTER
TRUE     EQU   X'FF'
FALSE    EQU   0
         SPACE 2
VOLSERLN DC    Y(0)
VOLSER0  DC    CL6' '
UNITLN   DC    H'0'
UNIT0    DC    CL4' '
         SPACE
WORK5    DS    CL5
DOUB     DS    D
DOUB1    DS    D
DOUB2    DS    D
MASK     DC    X'402020212020'
MASKCYL  DC    X'402020206B2020206B2020206B2020206B202120'
MASKPCT  DC    X'40202020214B20'
MASKMAX  DC    X'4020206B202120'
TRTAB    DC    C'0123456789ABCDEF'
UCBNAME4 DS    CL5                    4 CHAR UCB NAME
LIST     DS    0F
APARMAD  DC    A(0)
APTR     DC    A(PARMPTR)
APARM    DC    A(PARM)
         DC    AL1(128)
APARMLN  DC    AL3(INPARMLN)
         SPACE
CYLAVAIL DC    F'0'
CYLUSED  DC    F'0'
CYLFREE  DC    F'0'
VOLSFND  DC    F'0'
QUOTIENT DC    PL15'0'
         SPACE
ERR1     DC    C'SPA01 - OPERAND IS MISSING'
ERR2     DC    C'SPA02 - MISTYPED COMMAND'
ERR3     DC    C'SPA10 - NO VOLUMES MET SELECTION CRITERIA'
ERR4     DC    C'SPA04 - SUPPLIED VOLUMES SERIAL NUMBER WAS INVALID'
ERR5     DC    C'SPA03 - INVALID PARAMETER'
ERR6     DC    C'SPA06 - ENCOUNTERED AN UNKNOWN DEVICE TYPE. CALL T.S'
ERR7     DC    C'SPA07 - INVALID DEVICE NAME'
         SPACE 3
WORK     DC    CL80' '            PRT WORK AREA
EXPMSG   DC    CL40' ' ****TEST
         PRINT NOGEN
F4DSCB   DS    0F
         IECSDSL1 4
         DS    0D
PRT      DCB   DDNAME=PRT,DSORG=PS,MACRF=PM
         PRINT GEN
         LTORG
         TITLE 'TSOSPACE - IBM DATA AREAS'
CVT00    CVT   DSECT=YES
         EJECT
UCB      DSECT
         IEFUCBOB
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
